/**
 *  @note This file is part of Empirical, https://github.com/devosoft/Empirical
 *  @copyright Copyright (C) Michigan State University, MIT Software license; see doc/LICENSE.md
 *  @date 2019
 *
 *  @file  Organism.h
 *  @brief A wrapper for dealing with organisms is a generic manner.
 *  @note Status: PLANNING
 */

#ifndef MABE_ORGANISM_H
#define MABE_ORGANISM_H

#include "base/assert.h"
#include "data/VarMap.h"
#include "tools/string_utils.h"

namespace mabe {

  concept OrganismWrapper : Organism {
    VarMap var_map;

    operator double() const { emp_assert(false, "No default fitness conversion available."); return 0.0; } 
    double GetFitness() { return (double) *this; }
    int DoMutations() { emp_assert(false, "No default DoMutations() available."); }
    std::string ToString() { return emp::to_string(*this); }
    auto GetGenome() { return *this; }
  };

}
#endif
